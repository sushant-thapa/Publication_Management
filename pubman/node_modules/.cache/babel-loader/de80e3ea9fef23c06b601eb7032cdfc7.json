{"ast":null,"code":"var _jsxFileName = \"/home/sandesh/projects/pubman/src/components/table_component/table.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport Select from '@material-ui/core/Select';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport './table.css';\nimport { fieldList } from '../../database/fieldList';\n\nclass DataTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteRecord = id => event => {\n      var x = window.confirm(\"Do you really want to delete this record? \");\n\n      if (x) {\n        var context = this; // Initialize the database code here :)\n\n        var Datastore = require('nedb'),\n            db = new Datastore({\n          filename: \"/home/sandesh/totalData.txt\"\n        });\n\n        db.loadDatabase(function (err) {\n          if (err) {\n            alert(\"The database could not be loaded. The application cant work without this.\");\n          }\n        });\n        db.remove({\n          _id: id\n        }, {}, function (err, numRemoved) {\n          if (err) {\n            console.log(err);\n          }\n        });\n      }\n    };\n\n    this.expandButton = this.expandButton.bind(this);\n    this.setFields = this.setFields.bind(this);\n    this.getData = this.getData.bind(this);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.handleBibChange = this.handleBibChange.bind(this);\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleDocChange = this.handleDocChange.bind(this);\n    this.state = {\n      expanded: false,\n      fields: this.setFields(),\n      data: [],\n      formatForDownload: {\n        format: \"MLA\",\n        fileFormat: \"PDF\"\n      }\n    };\n    this.getData();\n  }\n\n  setFields() {\n    // This function sets all the data in the table. \n    // First, the prop of \"type\" is checked, and fields in table heading are fetched \n    // from the fieldList.js file. Then the related data are fetched from teh database.\n    // here, only the compulsory fields are shown. Other fields still exist.\n    var a, toReturn;\n\n    switch (this.props.type) {\n      case \"book\":\n        {\n          a = fieldList[0].bookFields;\n          toReturn = [];\n          a.map((item, index) => {\n            if (item.required) {\n              toReturn.push(item);\n            }\n\n            return true;\n          });\n          return toReturn;\n        }\n\n      case \"proceeding\":\n        {\n          a = fieldList[0].proceedingFields;\n          toReturn = [];\n          a.map((item, index) => {\n            if (item.required) {\n              toReturn.push(item);\n            }\n\n            return true;\n          });\n          return toReturn;\n        }\n\n      case \"chapter\":\n        {\n          a = fieldList[0].bookChapterFields;\n          toReturn = [];\n          a.map((item, index) => {\n            if (item.required) {\n              toReturn.push(item);\n            }\n\n            return true;\n          });\n          return toReturn;\n        }\n\n      case \"journal\":\n        {\n          a = fieldList[0].journalArticleFields;\n          toReturn = [];\n          a.map((item, index) => {\n            if (item.required) {\n              toReturn.push(item);\n            }\n\n            return true;\n          });\n          return toReturn;\n        }\n\n      case \"research-paper\":\n        {\n          a = fieldList[0].researchPaperFields;\n          toReturn = [];\n          a.map((item, index) => {\n            if (item.required) {\n              toReturn.push(item);\n            }\n\n            return true;\n          });\n          return toReturn;\n        }\n\n      default:\n        {\n          a = fieldList[0].bookFields;\n          toReturn = [];\n          a.map((item, index) => {\n            if (item.required) {\n              toReturn.push(item);\n            }\n\n            return true;\n          });\n          return toReturn;\n        }\n    }\n  }\n\n  getData() {\n    var context = this; // Initialize the database code here :)\n\n    var Datastore = require('nedb'),\n        db = new Datastore({\n      filename: \"/home/sandesh/totalData.txt\"\n    });\n\n    db.loadDatabase(function (err) {\n      if (err) {\n        alert(\"The database could not be loaded. The application cant work without this.\");\n      }\n    });\n    db.find({\n      type: this.props.type\n    }, function (error, store) {\n      if (error) {\n        console.log(\"Error occured while loading the data.\");\n        return [];\n      }\n\n      console.log(store);\n      return store;\n    });\n  }\n\n  expandButton() {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  }\n\n  handleBibChange(event) {\n    console.log(event.target.value);\n    this.state.formatForDownload.format = event.target.value;\n  }\n\n  handleDocChange(event) {\n    console.log(event.target.value);\n    this.state.formatForDownload.fileFormat = event.target.value;\n  }\n\n  downloadFile(event) {\n    console.log(\"Downloading file as \", this.state.formatForDownload.format);\n    console.log(\" in file format \", this.state.formatForDownload.fileFormat);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: 16,\n        marginBottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.props.type === \"book\" && 'Books' || this.props.type === \"research-paper\" && 'Research Papers' || this.props.type === \"journal\" && 'Journals' || this.props.type === \"chapter\" && 'Book Chapters' || this.props.type === \"proceeding\" && 'Proceedings' || '', \" Published:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      style: {\n        backgroundColor: '#f1f1f1',\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.fields.map((item, index) => {\n      return React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \" \", item.name, \" \");\n    }), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.state.data.map((item, index) => {\n      return React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, this.state.fields.map((i, j) => {\n        // Print fieldwise output.\n        return React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, item[i.id]);\n      }), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        style: {\n          color: \"#00a1ff\",\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        onClick: this.deleteRecord(item._id),\n        style: {\n          color: \"red\",\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })));\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(ExpansionPanel, {\n      expanded: this.state.expanded,\n      style: {\n        width: 350,\n        background: '#00a1ff',\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      onClick: this.expandButton,\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Generate:\"), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Format of citation\"), React.createElement(\"td\", {\n      className: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Select, {\n      native: true,\n      style: {\n        color: \"white\"\n      },\n      onClick: this.handleBibChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"mla\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"MLA\"), React.createElement(\"option\", {\n      value: \"apa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"APA\"), React.createElement(\"option\", {\n      value: \"ieee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"IEEE\")))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Document Format: \"), React.createElement(\"td\", {\n      className: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Select, {\n      native: true,\n      style: {\n        color: \"white\"\n      },\n      onClick: this.handleDocChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"PDF\"), React.createElement(\"option\", {\n      value: \"docx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"DOCX\")))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      className: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Fab, {\n      onClick: this.downloadFile,\n      size: \"small\",\n      variant: \"extended\",\n      style: {\n        backgroundColor: \"#fff\",\n        padding: 16\n      },\n      className: \"plus_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        color: \"grey\",\n        fontSize: 13\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Download\"))))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/home/sandesh/projects/pubman/src/components/table_component/table.js"],"names":["React","Paper","Table","TableBody","TableCell","TableHead","TableRow","Typography","Fab","Select","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","ExpandMoreIcon","DeleteIcon","EditIcon","fieldList","DataTable","Component","constructor","props","deleteRecord","id","event","x","window","confirm","context","Datastore","require","db","filename","loadDatabase","err","alert","remove","_id","numRemoved","console","log","expandButton","bind","setFields","getData","handleBibChange","downloadFile","handleDocChange","state","expanded","fields","data","formatForDownload","format","fileFormat","a","toReturn","type","bookFields","map","item","index","required","push","proceedingFields","bookChapterFields","journalArticleFields","researchPaperFields","find","error","store","setState","target","value","render","margin","marginBottom","backgroundColor","fontWeight","name","i","j","color","cursor","width","background","padding","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport Select from '@material-ui/core/Select';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport './table.css';\n\nimport { fieldList } from '../../database/fieldList';\n\nclass DataTable extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.expandButton = this.expandButton.bind(this);\n        this.setFields = this.setFields.bind(this);\n        this.getData = this.getData.bind(this);\n        this.deleteRecord = this.deleteRecord.bind(this);\n        this.handleBibChange = this.handleBibChange.bind(this);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.handleDocChange = this.handleDocChange.bind(this);\n\n        this.state = {\n            expanded: false,\n            fields: this.setFields(),\n            data: [],\n            formatForDownload: {format: \"MLA\", fileFormat: \"PDF\"}\n        }\n        this.getData();\n    }\n    setFields(){\n        // This function sets all the data in the table. \n        // First, the prop of \"type\" is checked, and fields in table heading are fetched \n        // from the fieldList.js file. Then the related data are fetched from teh database.\n        // here, only the compulsory fields are shown. Other fields still exist.\n        var a, toReturn;\n        switch(this.props.type){\n            case \"book\":{\n                a = fieldList[0].bookFields;\n                toReturn = [];\n                a.map((item, index) => {\n                    if (item.required){\n                        toReturn.push(item);\n                    }\n                    return true;\n                })\n                return toReturn;\n            }\n\n            case \"proceeding\":{\n                a = fieldList[0].proceedingFields;\n                toReturn = [];\n                a.map((item, index) => {\n                    if (item.required){\n                        toReturn.push(item);\n                    }\n                    return true;\n                })\n                return toReturn;\n            }\n\n            case \"chapter\":{\n                a = fieldList[0].bookChapterFields;\n                toReturn = [];\n                a.map((item, index) => {\n                    if (item.required){\n                        toReturn.push(item);\n                    }\n                    return true;\n                })\n                return toReturn;\n            }\n\n            case \"journal\":{\n                a = fieldList[0].journalArticleFields;\n                toReturn = [];\n                a.map((item, index) => {\n                    if (item.required){\n                        toReturn.push(item);\n                    }\n                    return true;\n                })\n                return toReturn;\n            }\n\n            case \"research-paper\":{\n                a = fieldList[0].researchPaperFields;\n                toReturn = [];\n                a.map((item, index) => {\n                    if (item.required){\n                        toReturn.push(item);\n                    }\n                    return true;\n                })\n                return toReturn;\n            }\n            default:{\n                a = fieldList[0].bookFields;\n                toReturn = [];\n                a.map((item, index) => {\n                    if (item.required){\n                        toReturn.push(item);\n                    }\n                    return true;\n                })\n                return toReturn;\n            }\n        }\n    }\n\n    deleteRecord = id => event => {\n        var x = window.confirm(\"Do you really want to delete this record? \");\n        if(x){\n            var context = this;\n            // Initialize the database code here :)\n            var Datastore = require('nedb'), db = new Datastore({filename: \"/home/sandesh/totalData.txt\"});\n            db.loadDatabase(function(err){\n                if(err){\n                    alert(\"The database could not be loaded. The application cant work without this.\");\n                }\n            })\n            db.remove({_id: id}, {}, function(err, numRemoved){\n                if(err){\n                    console.log(err);\n                }\n            })\n        }\n    }\n\n    getData(){\n        var context = this;\n        // Initialize the database code here :)\n        var Datastore = require('nedb'), db = new Datastore({filename: \"/home/sandesh/totalData.txt\"});\n        db.loadDatabase(function(err){\n            if(err){\n                alert(\"The database could not be loaded. The application cant work without this.\");\n            }\n        })\n\n        db.find({type: this.props.type}, function(error, store){\n            if(error){\n                console.log(\"Error occured while loading the data.\");\n                return [];\n            }\n            console.log(store);\n            return store;\n        })\n    }\n\n    expandButton(){\n        this.setState({expanded: !this.state.expanded});\n    }\n\n    handleBibChange(event){\n        console.log(event.target.value);\n        this.state.formatForDownload.format = event.target.value;\n    }\n    \n    handleDocChange(event){\n        console.log(event.target.value);\n        this.state.formatForDownload.fileFormat = event.target.value;\n    }\n\n    downloadFile(event){\n        console.log(\"Downloading file as \", this.state.formatForDownload.format);\n        console.log(\" in file format \", this.state.formatForDownload.fileFormat)\n    }\n\n    render(){\n        return(\n            <div>\n                <Typography variant = \"h6\" style = {{margin: 16, marginBottom: 5}}>\n                    {\n                        (this.props.type === \"book\" && 'Books')\n                        || (this.props.type === \"research-paper\" && 'Research Papers')\n                        || (this.props.type === \"journal\" && 'Journals')\n                        || (this.props.type === \"chapter\" && 'Book Chapters')\n                        || (this.props.type === \"proceeding\" && 'Proceedings') || ''\n                    } Published:\n                    {/* <Typography style = {{fontSize: 13}}>\n                        <i>\n                            Only some fields are included here.\n                            Downloading will generate a more complete table for reference.\n                        </i>\n                    </Typography> */}\n                </Typography>\n                <br />\n                <Paper>\n                    <Table>\n                        <TableHead style={{backgroundColor: '#f1f1f1', fontWeight: \"bold\"}}>\n                            <TableRow>\n                                {\n                                    this.state.fields.map((item, index) => {\n                                        return <TableCell> {item.name} </TableCell>\n                                    })\n                                }\n\n                            <TableCell>\n                                Edit\n                            </TableCell>\n\n                            <TableCell>\n                                Delete\n                            </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                                {\n                                    this.state.data.map((item, index) => {\n                                        return(\n                                            <TableRow>\n                                                {\n                                                    this.state.fields.map((i, j)=>{\n                                                        // Print fieldwise output.\n                                                        return (<TableCell>\n                                                            {item[i.id]}\n                                                        </TableCell>);\n                                                    })\n                                                }\n                                                <TableCell>\n                                                    <EditIcon style = {{color: \"#00a1ff\", cursor: \"pointer\" }}/>\n                                                </TableCell>\n\n                                                <TableCell>\n                                                    <DeleteIcon onClick = {this.deleteRecord(item._id)} style = {{color: \"red\", cursor: \"pointer\" }}/>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <br />\n                <ExpansionPanel expanded  = {this.state.expanded} style = {{width: 350, background: '#00a1ff', color: 'white'}}>\n                    <ExpansionPanelSummary onClick = {this.expandButton} expandIcon = {<ExpandMoreIcon />}>\n                        Generate:\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <table>\n                            <tr>\n                                <td>Format of citation</td>\n                                <td className = \"second\">\n                                    <Select native style = {{color: \"white\"}} onClick = {this.handleBibChange}>\n                                        <option value = \"mla\">MLA</option>\n                                        <option value = \"apa\">APA</option>\n                                        <option value = \"ieee\">IEEE</option>\n                                    </Select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Document Format: </td>\n                                <td className = \"second\">\n                                    <Select native style = {{color: \"white\"}} onClick = {this.handleDocChange}>\n                                        <option value = \"pdf\">PDF</option>\n                                        <option value = \"docx\">DOCX</option>\n                                    </Select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td  className = \"second\">\n                                    <br />\n                                    <Fab onClick = {this.downloadFile} size = \"small\" variant = \"extended\" style = {{backgroundColor: \"#fff\", padding: 16}} className = \"plus_button\">\n                                        <strong style={{color: \"grey\", fontSize: 13}}>Download</strong>\n                                    </Fab>\n                                </td>\n                            </tr>\n                        </table>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <br />\n            </div>\n        )\n    }\n}\n\n\nexport default DataTable"]},"metadata":{},"sourceType":"module"}