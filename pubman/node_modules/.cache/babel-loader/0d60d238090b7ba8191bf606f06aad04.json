{"ast":null,"code":"var _jsxFileName = \"/home/sandesh/projects/pubman/src/components/edit_component/edit.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { fieldList } from '../../database/fieldList';\nimport { Table, TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport TopBar from '../topbar_component/topbar';\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.destroyAndAdd = this.destroyAndAdd.bind(this);\n    this.handleProp = this.handleProp.bind(this);\n    this.state = {\n      articleID: '',\n      articleType: '',\n      fieldList: []\n    };\n    this.state.articleID = this.props.location.id;\n    this.state.articleType = this.props.location.type;\n    console.log(this.state.articleType);\n    console.log(this.props.location.id);\n    this.handleProp();\n  }\n\n  handleProp() {\n    console.log(\"HandleProp called.\");\n\n    switch (this.state.articleType) {\n      case 'book':\n        {\n          this.setState({\n            fieldList: fieldList[0].bookFields\n          });\n          break;\n        }\n\n      case 'journal':\n        {\n          this.setState({\n            fieldList: fieldList[0].journalArticleFields\n          });\n          break;\n        }\n\n      case 'chapter':\n        {\n          this.setState({\n            fieldList: fieldList[0].bookChapterFields\n          });\n          break;\n        }\n\n      case 'proceeding':\n        {\n          this.setState({\n            fieldList: fieldList[0].proceedingFields\n          });\n          break;\n        }\n\n      case 'research-paper':\n        {\n          console.log('setting thing for research paper');\n          this.state.fieldList = fieldList[0].researchPaperFields;\n          break;\n        }\n\n      case 'article':\n        {\n          this.setState({\n            fieldList: fieldList[0].periodicalArticleFields\n          });\n          break;\n        }\n\n      case 'report':\n        {\n          this.setState({\n            fieldList: fieldList[0].reportFields\n          });\n          break;\n        }\n\n      default:\n        {\n          console.log(\"Invalid Choice for form selection. DO NOT TAMPER.\");\n          break;\n        }\n    } // Push all the required fields into an array for form validation.\n\n\n    var temp = [];\n    this.state.fieldList.map((key, index) => {\n      if (key.required) {\n        temp.push(key.id);\n      }\n    }); // Setstate not working in array. Please fix this. :'( \n\n    this.state.compulsoryFields = temp;\n    console.log(\"Changed the state a/c the prop.\");\n    console.log(this.state.fieldList);\n  }\n\n  destroyAndAdd() {}\n\n  render() {\n    var context = this;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Enter the information related to \", this.props.articleType, \".\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"( \", React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"*\"), \" denotes a required field )\"), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.fieldList.map(function (item, index) {\n      return React.createElement(TableRow, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, item.description, item.required && React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"*\")), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: item.required,\n        name: \"somename\",\n        id: \"someid\",\n        className: \"someClassName\",\n        key: index,\n        value: \"a\",\n        onChange: this.destroyAndAdd,\n        placeholder: \"Begin typing...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n    }), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"large\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Submit.\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/sandesh/projects/pubman/src/components/edit_component/edit.js"],"names":["React","Typography","fieldList","Table","TableBody","TableRow","TableCell","TextField","Button","TopBar","Edit","Component","constructor","props","destroyAndAdd","bind","handleProp","state","articleID","articleType","location","id","type","console","log","setState","bookFields","journalArticleFields","bookChapterFields","proceedingFields","researchPaperFields","periodicalArticleFields","reportFields","temp","map","key","index","required","push","compulsoryFields","render","context","color","item","description","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport {fieldList} from '../../database/fieldList';\nimport {Table,  TableBody, TableRow, TableCell, TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nimport TopBar from '../topbar_component/topbar';\n\nexport default class Edit extends React.Component{\n    constructor(props){\n        super(props);\n        this.destroyAndAdd = this.destroyAndAdd.bind(this);\n        this.handleProp = this.handleProp.bind(this);\n        this.state = {\n            articleID: '',\n            articleType: '',  \n            fieldList: []\n        }\n        this.state.articleID = this.props.location.id;\n        this.state.articleType = this.props.location.type;\n        console.log(this.state.articleType);\n        console.log(this.props.location.id);\n        this.handleProp();\n    }\n\n\n    handleProp(){\n        console.log(\"HandleProp called.\");\n        switch(this.state.articleType){\n            case 'book':{\n                this.setState({fieldList: fieldList[0].bookFields});\n                break;\n            }\n            case 'journal':{\n                this.setState({fieldList: fieldList[0].journalArticleFields});\n                break;\n            }\n            case 'chapter':{\n                this.setState({fieldList: fieldList[0].bookChapterFields});\n                break;\n            }\n            case 'proceeding':{\n                this.setState({fieldList: fieldList[0].proceedingFields});\n                break;\n            }\n            case 'research-paper':{\n                console.log('setting thing for research paper');\n                this.state.fieldList = fieldList[0].researchPaperFields;\n                break;\n            }\n            case 'article':{\n                this.setState({fieldList: fieldList[0].periodicalArticleFields});\n                break;\n            }\n            case 'report':{\n                this.setState({fieldList: fieldList[0].reportFields});\n                break;\n            }\n            default:{\n                console.log(\"Invalid Choice for form selection. DO NOT TAMPER.\");\n                break;\n            }\n        }\n        // Push all the required fields into an array for form validation.\n        var temp = [];\n        this.state.fieldList.map((key, index)=>{\n            if(key.required) {\n                temp.push(key.id);\n            }\n        });\n        // Setstate not working in array. Please fix this. :'( \n        this.state.compulsoryFields = temp;\n        console.log(\"Changed the state a/c the prop.\");\n        console.log(this.state.fieldList);\n    }\n    \n    destroyAndAdd(){\n\n    }\n    render(){\n        var context = this;\n        return(\n            <div>\n                <TopBar></TopBar>\n                \n            <div> \n                <div>\n                    <Typography>\n                        Enter the information related to {this.props.articleType}.\n                    </Typography>\n                    <br />\n                    <Typography>\n                        ( <span style = {{color: 'red'}}>*</span> denotes a required field )\n                    </Typography>\n                    <Table>\n                        <TableBody>\n                            { this.state.fieldList.map(function(item, index){\n                                return (\n                                    <TableRow key = {index}>\n                                        <TableCell>\n                                            {item.description}\n                                            {item.required && <span style = {{color: 'red'}}>*</span> }\n                                        </TableCell>\n                                        <TableCell>\n                                            <TextField \n                                            required = {item.required}\n                                            name = \"somename\"\n                                            id = \"someid\"\n                                            className = \"someClassName\"\n                                            key = {index}\n                                            value = \"a\"\n                                            onChange = {this.destroyAndAdd} placeholder = \"Begin typing...\" />\n                                        </TableCell>\n                                    </TableRow>\n                                );   \n                            })}\n                            <TableRow>\n                                <TableCell></TableCell>\n                                <TableCell>\n                                    <Button size = \"large\" color = \"primary\" onClick = {this.handleSubmit}>\n                                        Submit.\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}