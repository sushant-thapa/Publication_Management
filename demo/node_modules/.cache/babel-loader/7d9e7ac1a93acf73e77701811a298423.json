{"ast":null,"code":"import _classCallCheck from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/sandesh/se/src/components/combined.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport './combined.css';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './modules/sample_data';\nimport { returnData } from './modules/sample_data';\n\nvar Datastore = require('nedb'),\n    db = new Datastore({\n  filename: '/home/sandesh/se/database.db'\n});\n\ndb.loadDatabase(function (error) {\n  if (error) {\n    console.log(\"Error while loading database: \", error);\n  }\n});\n\nvar TableGen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableGen, _Component);\n\n  function TableGen(props, context) {\n    var _this;\n\n    _classCallCheck(this, TableGen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableGen).call(this, props, context));\n    _this.state = {};\n\n    if (_this.props.type === \"combined\") {\n      _this.title = \"All Publications:\";\n    }\n\n    if (_this.props.type === \"books\") {\n      _this.title = \"Books:\";\n    }\n\n    if (_this.props.type === \"research-papers\") {\n      _this.title = \"Research Papers:\";\n    }\n\n    _this.state = {\n      modal: false,\n      deleteMode: false,\n      count: 1\n    };\n    _this.adderLink = \"addnew/\" + _this.props.type;\n    _this.editorLink = \"editlist/\";\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.setState({\n      data: ''\n    });\n\n    _this.setState({\n      loaded: false\n    });\n\n    db.find({}, function (error, docs) {\n      console.log(\"State is\", myState);\n      console.log(docs);\n\n      if (!error) {\n        myState.setState({\n          data: docs\n        });\n        myState.setState({\n          loaded: true\n        });\n      }\n    });\n    return _this;\n  }\n\n  _createClass(TableGen, [{\n    key: \"deleteItem\",\n    value: function deleteItem(event) {\n      fetch(\"http://localhost:3001/deleteItem\", {\n        method: \"POST\"\n      });\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      // db.find({}, function(error, docs){\n      //     if(error){\n      //         alert(\"There was an error fetching the data :'( \");\n      //     }\n      //     // console.log(\"Data fetched: \", docs);\n      //     // reference.data = docs;\n      // })\n      console.log(\"Spider man.. spider man.. Does whatever a spider\");\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"table container-fluid \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        className: \"small text-center\",\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" Generate \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Select format for \", React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.title), \" table to generate and download or print.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"Table Format:\", React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \" Modern Language Association\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" Modern Language Association\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \" Modern Language Association\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" Modern Language Association\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"File Format:\", React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"PDF\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"DOCX\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Generate and Download\"), React.createElement(Button, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Generate and Print\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), \"\\xA0\")), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.title, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \" S.N.\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" Title \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" Name of Journal \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" Volume \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" Authors \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" Date \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" DOI \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" ISBN \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" Type \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \" Edit \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" Delete \")), this.state.loaded && this.state.data.map(function (item, index) {\n        console.log(\"Loading data into the table, row #\", index);\n        return React.createElement(\"tr\", {\n          key: item.title + _this2.state.count,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, _this2.state.count++), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, item.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, item.name_of_journal), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, item.volume), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"// Remaining to fill\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, item.date), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, item.doi), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, item.isbn), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, _this2.props.type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: _this2.editorLink + \"\" + item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Edit\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(Button, {\n          name: item.title,\n          bsSize: \"small\",\n          bsStyle: \"danger\",\n          onClick: _this2.deleteItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"Delete\")));\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsSize: \"small\",\n        bsStyle: \"warning\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Generate\"), this.props.type !== \"combined\" ? React.createElement(Button, {\n        bsSize: \"small\",\n        bsStyle: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.adderLink,\n        state: \"type: this.props.type\",\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Add new Entry\")) : \"\")));\n    }\n  }]);\n\n  return TableGen;\n}(Component);\n\nexport default TableGen;","map":{"version":3,"sources":["/home/sandesh/se/src/components/combined.js"],"names":["React","Component","Button","ButtonGroup","Modal","ModalHeader","ModalBody","Link","returnData","Datastore","require","db","filename","loadDatabase","error","console","log","TableGen","props","context","state","type","title","modal","deleteMode","count","adderLink","editorLink","toggle","bind","setState","data","loaded","find","docs","myState","event","fetch","method","map","item","index","name_of_journal","volume","date","doi","isbn","deleteItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport './combined.css';\nimport {Button, ButtonGroup} from 'react-bootstrap';\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport {Link} from 'react-router-dom'\nimport './modules/sample_data'\nimport { returnData } from './modules/sample_data';\n\nvar Datastore = require('nedb'), db = new Datastore({ filename: '/home/sandesh/se/database.db' });\ndb.loadDatabase(function(error){\n    if(error)\n        {console.log(\"Error while loading database: \" , error);    \n    }\n})\n\nclass TableGen extends Component {\n    constructor(props, context){\n        super(props, context);\n        this.state = {};\n        if(this.props.type === \"combined\"){\n            this.title = \"All Publications:\";\n        }\n        if(this.props.type === \"books\"){\n            this.title = \"Books:\";\n        }\n        if(this.props.type === \"research-papers\"){\n            this.title = \"Research Papers:\";\n        }\n        \n        this.state = {\n          modal: false,\n          deleteMode: false,\n          count: 1\n        };\n\n        this.adderLink = \"addnew/\" + this.props.type;\n        this.editorLink = \"editlist/\";\n        this.toggle = this.toggle.bind(this);\n        this.setState({data: ''});\n        this.setState({loaded: false});\n\n        db.find({}, function(error, docs){\n            console.log(\"State is\", myState);\n            console.log(docs);\n            if(!error){\n                myState.setState({data: docs});\n                myState.setState({loaded: true});\n            }\n        })\n    }\n    \n    \n    deleteItem(event){\n        fetch(\"http://localhost:3001/deleteItem\",{\n            method: \"POST\"\n        })\n    }\n\n    fetchData(){\n        // db.find({}, function(error, docs){\n        //     if(error){\n        //         alert(\"There was an error fetching the data :'( \");\n        //     }\n        //     // console.log(\"Data fetched: \", docs);\n        //     // reference.data = docs;\n        // })\n        console.log(\"Spider man.. spider man.. Does whatever a spider\")\n    }\n    \n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render(){\n        return(\n            <div className = \"table container-fluid \">\n                <Modal className = \"small text-center\" isOpen={this.state.modal} toggle={this.toggle} >\n                    <ModalHeader toggle = {this.toggle}> Generate </ModalHeader>\n\n                    <ModalBody>\n                        Select format for <u>{this.title}</u> table to generate and download\n                        or print.\n                        <br /><br />\n                        Table Format:\n                        <form>\n                            <select>\n                                <option> Modern Language Association</option>\n                                <option> Modern Language Association</option>\n                                <option> Modern Language Association</option>\n                                <option> Modern Language Association</option>\n                            </select>\n                        </form>\n\n                        <br />\n                        File Format:\n                        <form>\n                            <select>\n                                <option>PDF</option>\n                                <option>DOCX</option>\n                            </select>\n                        </form>\n                        <br />\n                        <ButtonGroup>\n                            <Button bsStyle = \"primary\" >Generate and Download</Button>\n                            <Button bsStyle = \"primary\" >Generate and Print</Button>\n                        </ButtonGroup>\n                        <br />&nbsp;\n                    </ModalBody>\n                </Modal>\n                <div className = \"container\">\n                    <h6>\n                        {this.title}\n                        <br />\n                    </h6>\n                    <br />\n                    <table className = \"small\">\n                        <tbody>\n                            <tr>\n                                <td> S.N.</td>\n                                <td> Title </td>\n                                <td> Name of Journal </td>\n                                <td> Volume </td>\n                                <td> Authors </td>\n                                <td> Date </td>\n                                <td> DOI </td>\n                                <td> ISBN </td>\n                                <td> Type </td>\n                                <td> Edit </td>\n                                <td> Delete </td>\n                            </tr>\n                            {   this.state.loaded && \n                                this.state.data.map((item, index)=>{\n                                    console.log(\"Loading data into the table, row #\", index);\n                                    return(<tr key={item.title+this.state.count}>\n                                        <td>{this.state.count++}</td>\n                                        <td>{item.title}</td>\n                                        <td>{item.name_of_journal}</td>\n                                        <td>{item.volume}</td>\n                                        <td>// Remaining to fill</td>\n                                        <td>{item.date}</td>\n                                        <td>{item.doi}</td>\n                                        <td>{item.isbn}</td>\n                                        <td>{this.props.type}</td>\n                                        <td>\n                                            <Link to={this.editorLink + \"\" + item.title}>Edit</Link>\n                                        </td>\n                                        <td>\n                                            <Button name={item.title} bsSize = \"small\" bsStyle=\"danger\" onClick={this.deleteItem}>Delete</Button>\n                                        </td>\n                                    </tr>);\n                                })\n                            }\n                        </tbody>\n                    </table>\n                    <br />\n                    <ButtonGroup>\n                        <Button bsSize = 'small' bsStyle = 'warning' onClick = {this.toggle}>Generate</Button>\n                        {\n                            this.props.type !== \"combined\"?\n                            <Button bsSize = 'small' bsStyle = 'success'><Link to={this.adderLink} state={`type: this.props.type`} className=\"white\">Add new Entry</Link></Button>\n                            : \"\"\n                        }\n                    </ButtonGroup>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TableGen;"]},"metadata":{},"sourceType":"module"}