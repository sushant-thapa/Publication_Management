{"ast":null,"code":"import _defineProperty from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/sandesh/se/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/sandesh/se/src/components/newentry.js\";\nimport React, { Component } from 'react';\nimport Navibar from '../navbar';\nimport { FormControl } from 'react-bootstrap';\nimport './newentry.css';\nimport { BookFields, ResearchPaperFields } from './fields';\nimport { Button } from 'react-bootstrap';\n\nvar Datastore = require('nedb'),\n    db = new Datastore({\n  filename: '/home/sandesh/se/database.db'\n});\n\ndb.loadDatabase(function (error) {\n  if (error) {\n    console.log(\"Error while loading database: \", error);\n  }\n});\nconsole.log(db);\n\nvar Entry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Entry, _Component);\n\n  function Entry(props) {\n    var _this;\n\n    _classCallCheck(this, Entry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Entry).call(this, props));\n    _this.state = {\n      \"user_email\": \"mail.sandeshbhusal@gmail.com\",\n      \"type_of_article\": ''\n    };\n    console.log(\"Props: \", props.match.params.item);\n\n    if (props.match.params.type === \"books\") {\n      _this.setState({\n        type_of_article: \"book\"\n      });\n\n      _this.type = \"Book\";\n      _this.fields = BookFields;\n    } else if (props.match.params.type === \"research-papers\") {\n      _this.setState({\n        type_of_article: \"research-paper\"\n      });\n\n      _this.state.type_of_article = \"research-paper\";\n      _this.type = \"Research paper\";\n      _this.fields = ResearchPaperFields;\n    } else {\n      _this.type = \"Research Paper\";\n      _this.fields = ResearchPaperFields;\n    }\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAuthors = _this.handleAuthors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearForm = _this.clearForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.authorNames = new Array();\n    return _this;\n  }\n\n  _createClass(Entry, [{\n    key: \"handleChange\",\n    value: function handleChange(item) {\n      var name = item.target.name.replace(\" \", \"_\");\n      var name = item.target.name.replace(\"\\\"\", \"\");\n      this.setState(_defineProperty({}, name, item.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      db.insert(this.state, function (error, newDoc) {\n        console.log(\"error of function: \", error);\n\n        if (!error) {\n          alert(\"This record has been uploaded successfully. Please refresh the page to add another.\");\n        }\n\n        console.log(\"New doc value:\", newDoc);\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleAuthors\",\n    value: function handleAuthors(event) {\n      var value = event.target.value;\n      var authors = value.split(\",\");\n      this.authorNames.length = 0;\n      var toReturn = new Array();\n\n      if (authors.length > 0) {\n        authors.map(function (item, index) {\n          item = item.trim();\n          var flname = item.split(\" \");\n\n          if (flname.length > 1) {\n            var firstName = flname[0];\n            var secondName = flname[1];\n            var output = {\n              \"first_name\": firstName,\n              \"last_name\": secondName,\n              \"email\": \"random\"\n            };\n            toReturn.push(output);\n          }\n        });\n      }\n\n      this.authorNames = toReturn;\n      this.setState({\n        authors: this.authorNames\n      });\n    }\n  }, {\n    key: \"clearForm\",\n    value: function clearForm() {\n      this.state = {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Navibar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Add a new \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.type), \" to the database.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        id: \"fillForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"entryTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, Object.keys(this.fields).map(function (key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, key, \":\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          className: \"input\",\n          name: _this2.fields[key].holder,\n          id: key,\n          onChange: _this2.handleChange,\n          type: _this2.fields[key].type,\n          placeholder: _this2.fields[key].placeholder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Authors: \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: \"authors\",\n        name: \"authorHolder\",\n        placeholder: \"Enter the name of authors, seperated by single comma\",\n        type: \"string\",\n        onChange: this.handleAuthors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \" Add \"), \" \\xA0\\xA0\\xA0\", React.createElement(Button, {\n        bsstyle: \"danger\",\n        type: \"reset\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Clear \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Entry;\n}(Component);\n\nexport default Entry;","map":{"version":3,"sources":["/home/sandesh/se/src/components/newentry.js"],"names":["React","Component","Navibar","FormControl","BookFields","ResearchPaperFields","Button","Datastore","require","db","filename","loadDatabase","error","console","log","Entry","props","state","match","params","item","type","setState","type_of_article","fields","handleSubmit","bind","handleChange","handleAuthors","clearForm","authorNames","Array","name","target","replace","value","event","insert","newDoc","alert","preventDefault","authors","split","length","toReturn","map","index","trim","flname","firstName","secondName","output","push","Object","keys","key","holder","placeholder"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navibar from '../navbar';\nimport {FormControl} from 'react-bootstrap';\nimport './newentry.css';\nimport { BookFields, ResearchPaperFields } from './fields';\nimport {Button} from 'react-bootstrap';\n\nvar Datastore = require('nedb'), db = new Datastore({ filename: '/home/sandesh/se/database.db' });\ndb.loadDatabase(function(error){\n    if(error)\n        {console.log(\"Error while loading database: \" , error);    \n    }\n})\nconsole.log(db);\nclass Entry extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            \"user_email\": \"mail.sandeshbhusal@gmail.com\",\n            \"type_of_article\" : ''\n        };\n        console.log(\"Props: \", props.match.params.item);\n        if(props.match.params.type === \"books\"){\n            this.setState({type_of_article : \"book\"});\n            this.type = \"Book\";\n            this.fields = BookFields;\n        }\n        else if(props.match.params.type === \"research-papers\"){\n            this.setState({type_of_article : \"research-paper\"});\n            this.state.type_of_article = \"research-paper\";                      \n            this.type = \"Research paper\";            \n            this.fields = ResearchPaperFields;\n        }\n        else{\n            this.type = \"Research Paper\";\n            this.fields = ResearchPaperFields;\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleAuthors = this.handleAuthors.bind(this);\n        this.clearForm = this.clearForm.bind(this);\n        this.authorNames = new Array();\n    }\n    handleChange(item){\n        var name = (item.target.name).replace(\" \", \"_\");\n        var name = (item.target.name).replace(\"\\\"\", \"\");\n        this.setState({[name] : item.target.value});\n    }\n    handleSubmit(event){\n        db.insert(this.state, function(error, newDoc){\n            console.log(\"error of function: \", error);\n            if(!error){\n                alert(\"This record has been uploaded successfully. Please refresh the page to add another.\");\n            }\n            console.log(\"New doc value:\" , newDoc);\n        });\n        event.preventDefault();\n    }\n    handleAuthors(event){\n        var value = event.target.value;\n        var authors = value.split(\",\");\n        this.authorNames.length = 0;\n        var toReturn = new Array();\n        if(authors.length > 0){\n            authors.map(function(item, index){\n                item = item.trim();\n                var flname = item.split(\" \");\n                if(flname.length > 1){\n                    var firstName = flname[0];\n                    var secondName = flname[1];\n                    var output = {\"first_name\" : firstName, \"last_name\": secondName, \"email\" : \"random\"};\n                    toReturn.push(output);\n                }\n            });\n        }\n        this.authorNames = toReturn;\n        this.setState({authors : this.authorNames});\n    }\n    clearForm(){\n        this.state = {};\n    }\n    render(){\n        return(\n            <div>\n                <Navibar />\n                <br />\n                <div className = \"container-fluid\">\n                    <div className = 'container'>\n                        Add a new <b>{this.type}</b> to the database.\n                        <br /><br />\n                        <form id = \"fillForm\" onSubmit = {this.handleSubmit}>\n                            <table id = \"entryTable\">\n                                <tbody>\n                                {\n                                    Object.keys(this.fields).map((key) => {\n                                        return (<tr key = {key}><td>{key}:</td><td><FormControl\n                                                className = \"input\" \n                                                name = {this.fields[key].holder}\n                                                id = {key} \n                                                onChange={this.handleChange}\n                                                type =  {this.fields[key].type} \n                                                placeholder = {this.fields[key].placeholder}/></td></tr>)\n                                    })\n                                }\n                                <tr>\n                                    <td>Authors: </td>\n                                    <td>\n                                        <FormControl className = \"authors\"\n                                                     name = \"authorHolder\"\n                                                     placeholder = \"Enter the name of authors, seperated by single comma\"\n                                                     type = \"string\"\n                                                     onChange={this.handleAuthors}\n                                                     ></FormControl>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <br />\n                            <Button bsStyle = \"success\" type = \"submit\"> Add </Button> &nbsp;&nbsp;&nbsp;\n                            <Button bsstyle = 'danger' type = 'reset' onClick={this.clearForm}>Clear </Button>                            \n                        </form>\n                        <br />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Entry;"]},"metadata":{},"sourceType":"module"}